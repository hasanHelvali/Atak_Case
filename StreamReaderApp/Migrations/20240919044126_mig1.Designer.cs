// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StreamReaderApp.Context;

#nullable disable

namespace StreamReaderApp.Migrations
{
    [DbContext(typeof(ProductViewContext))]
    [Migration("20240919044126_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StreamReaderApp.Models.Context", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contexts");
                });

            modelBuilder.Entity("StreamReaderApp.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StreamReaderApp.Models.ProductView", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ContextId")
                        .HasColumnType("integer");

                    b.Property<string>("Event")
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductViews");
                });

            modelBuilder.Entity("StreamReaderApp.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StreamReaderApp.Models.ProductView", b =>
                {
                    b.HasOne("StreamReaderApp.Models.Context", "Context")
                        .WithMany("ProductViews")
                        .HasForeignKey("ContextId");

                    b.HasOne("StreamReaderApp.Models.Product", "Product")
                        .WithMany("ProductViews")
                        .HasForeignKey("ProductId");

                    b.HasOne("StreamReaderApp.Models.User", "User")
                        .WithMany("ProductViews")
                        .HasForeignKey("UserId");

                    b.Navigation("Context");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StreamReaderApp.Models.Context", b =>
                {
                    b.Navigation("ProductViews");
                });

            modelBuilder.Entity("StreamReaderApp.Models.Product", b =>
                {
                    b.Navigation("ProductViews");
                });

            modelBuilder.Entity("StreamReaderApp.Models.User", b =>
                {
                    b.Navigation("ProductViews");
                });
#pragma warning restore 612, 618
        }
    }
}
